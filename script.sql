-- MySQL Script generated by MySQL Workbench
-- Wed Nov  6 15:22:10 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema brcantina
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema brcantina
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `brcantina` DEFAULT CHARACTER SET utf8 ;
USE `brcantina` ;

-- -----------------------------------------------------
-- Table `brcantina`.`tipo_usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `brcantina`.`tipo_usuario` (
  `id_tipo_usuario` INT NOT NULL AUTO_INCREMENT,
  `descricao` VARCHAR(45) NULL,
  PRIMARY KEY (`id_tipo_usuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `brcantina`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `brcantina`.`usuario` (
  `id_usuario` INT NOT NULL,
  `nome` VARCHAR(150) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `tem_acesso_programa` TINYINT NOT NULL,
  `login` VARCHAR(45) NOT NULL,
  `senha` LONGTEXT NOT NULL,
  `ativo` TINYINT NOT NULL,
  `fk_tipo_usuario` INT NOT NULL,
  PRIMARY KEY (`id_usuario`),
  INDEX `fk_usuario_tipo_usuario_idx` (`fk_tipo_usuario` ASC),
  CONSTRAINT `fk_usuario_tipo_usuario`
    FOREIGN KEY (`fk_tipo_usuario`)
    REFERENCES `brcantina`.`tipo_usuario` (`id_tipo_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `brcantina`.`endereco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `brcantina`.`endereco` (
  `id_endereco` INT NOT NULL,
  `cep` VARCHAR(8) NOT NULL,
  `endereco` VARCHAR(255) NOT NULL,
  `bairro` VARCHAR(150) NOT NULL,
  `cidade` VARCHAR(150) NOT NULL,
  `referencia` VARCHAR(255) NULL,
  `numero` VARCHAR(255) NOT NULL,
  `complemento` VARCHAR(255) NULL,
  `uf` VARCHAR(2) NOT NULL,
  PRIMARY KEY (`id_endereco`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `brcantina`.`cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `brcantina`.`cliente` (
  `id_cliente` INT NOT NULL,
  `nome` VARCHAR(150) NULL,
  `documento` VARCHAR(14) NULL,
  `email` VARCHAR(45) NULL,
  `data_nasciemento` DATETIME NULL,
  `sexo` ENUM('MASCULINO', 'FEMININO') NULL,
  `fone` VARCHAR(11) NULL,
  `fk_endereco` INT NOT NULL,
  PRIMARY KEY (`id_cliente`),
  INDEX `fk_dt_cliente_endereco1_idx` (`fk_endereco` ASC),
  CONSTRAINT `fk_dt_cliente_endereco1`
    FOREIGN KEY (`fk_endereco`)
    REFERENCES `brcantina`.`endereco` (`id_endereco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `brcantina`.`pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `brcantina`.`pedido` (
  `id_pedido` INT NOT NULL,
  `observacao` VARCHAR(45) NULL,
  `fk_cliente` INT NOT NULL,
  `fk_usuario` INT NOT NULL,
  PRIMARY KEY (`id_pedido`),
  INDEX `fk_td_pedido_cliente1_idx` (`fk_cliente` ASC),
  INDEX `fk_td_pedido_usuario1_idx` (`fk_usuario` ASC),
  CONSTRAINT `fk_td_pedido_cliente1`
    FOREIGN KEY (`fk_cliente`)
    REFERENCES `brcantina`.`cliente` (`id_cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_td_pedido_usuario1`
    FOREIGN KEY (`fk_usuario`)
    REFERENCES `brcantina`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `brcantina`.`categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `brcantina`.`categoria` (
  `id_categoria` INT NOT NULL,
  `descricao` VARCHAR(45) NULL,
  PRIMARY KEY (`id_categoria`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `brcantina`.`produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `brcantina`.`produto` (
  `id_produto` INT NOT NULL,
  `nome` VARCHAR(45) NULL,
  `preco_custo` DECIMAL NULL,
  `preco_venda` DECIMAL NULL,
  `medida` ENUM('UN', 'KG', 'LT') NULL,
  `codigo_pesonalizado` VARCHAR(45) NULL,
  `descricao` VARCHAR(255) NULL,
  `foto` LONGBLOB NULL,
  `fk_categoria_conta` INT NOT NULL,
  PRIMARY KEY (`id_produto`),
  INDEX `fk_produto_categoria1_idx` (`fk_categoria_conta` ASC),
  CONSTRAINT `fk_produto_categoria1`
    FOREIGN KEY (`fk_categoria_conta`)
    REFERENCES `brcantina`.`categoria` (`id_categoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `brcantina`.`item_pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `brcantina`.`item_pedido` (
  `id_item_pedido` INT NOT NULL,
  `quantidade` VARCHAR(45) NULL,
  `fk_produto` INT NOT NULL,
  `fk_pedido` INT NOT NULL,
  PRIMARY KEY (`id_item_pedido`),
  INDEX `fk_item_pedido_produto1_idx` (`fk_produto` ASC),
  INDEX `fk_item_pedido_td_pedido1_idx` (`fk_pedido` ASC),
  CONSTRAINT `fk_item_pedido_produto1`
    FOREIGN KEY (`fk_produto`)
    REFERENCES `brcantina`.`produto` (`id_produto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_item_pedido_td_pedido1`
    FOREIGN KEY (`fk_pedido`)
    REFERENCES `brcantina`.`pedido` (`id_pedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `brcantina`.`estoque`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `brcantina`.`estoque` (
  `id_estoque` INT NOT NULL,
  `quantidade_atual` MEDIUMTEXT NULL,
  `valor_custo` DECIMAL NULL,
  `fk_produto` INT NOT NULL,
  PRIMARY KEY (`id_estoque`),
  INDEX `fk_td_estoque_produto1_idx` (`fk_produto` ASC),
  CONSTRAINT `fk_td_estoque_produto1`
    FOREIGN KEY (`fk_produto`)
    REFERENCES `brcantina`.`produto` (`id_produto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `brcantina`.`insumo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `brcantina`.`insumo` (
  `id_insumo` INT NOT NULL,
  `nome` VARCHAR(45) NULL,
  `preco_custo` DECIMAL NULL,
  `medida` ENUM('UN', 'KG', 'LT') NULL,
  `cod_sistema` VARCHAR(45) NULL,
  `cod_personalizado` VARCHAR(45) NULL,
  PRIMARY KEY (`id_insumo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `brcantina`.`ficha_tecnica`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `brcantina`.`ficha_tecnica` (
  `id_ficha_tecnica` INT NOT NULL,
  `insumo_item` VARCHAR(45) NULL,
  `fk_insumo` INT NOT NULL,
  `fk_produto` INT NOT NULL,
  PRIMARY KEY (`id_ficha_tecnica`),
  INDEX `fk_td_ficha_tecnica_insumo1_idx` (`fk_insumo` ASC),
  INDEX `fk_td_ficha_tecnica_produto1_idx` (`fk_produto` ASC),
  CONSTRAINT `fk_td_ficha_tecnica_insumo1`
    FOREIGN KEY (`fk_insumo`)
    REFERENCES `brcantina`.`insumo` (`id_insumo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_td_ficha_tecnica_produto1`
    FOREIGN KEY (`fk_produto`)
    REFERENCES `brcantina`.`produto` (`id_produto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `brcantina`.`fornecedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `brcantina`.`fornecedor` (
  `id_fornecedor` INT NOT NULL,
  `nome` VARCHAR(45) NULL,
  `fone` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `documento` VARCHAR(45) NULL,
  `IERG` VARCHAR(45) NULL,
  `fk_endereco` INT NOT NULL,
  PRIMARY KEY (`id_fornecedor`),
  INDEX `fk_fornecedor_endereco1_idx` (`fk_endereco` ASC),
  CONSTRAINT `fk_fornecedor_endereco1`
    FOREIGN KEY (`fk_endereco`)
    REFERENCES `brcantina`.`endereco` (`id_endereco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `brcantina`.`categoria_conta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `brcantina`.`categoria_conta` (
  `id_tipo_conta` INT NOT NULL,
  `descricao` VARCHAR(45) NULL,
  PRIMARY KEY (`id_tipo_conta`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `brcantina`.`conta_pagar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `brcantina`.`conta_pagar` (
  `id_conta_pagar` INT NOT NULL,
  `categoria` VARCHAR(45) NULL,
  `descricao` VARCHAR(255) NULL,
  `vencimento` DATE NULL,
  `valor` DECIMAL NULL,
  `conta_paga` TINYINT(1) NULL,
  `data_pagamento` DATE NULL,
  `valor_pago` DECIMAL NULL,
  `fk_fornecedor_id_fornecedor` INT NOT NULL,
  `fk_categoria_conta` INT NOT NULL,
  PRIMARY KEY (`id_conta_pagar`),
  INDEX `fk_td_conta_pagar_fornecedor1_idx` (`fk_fornecedor_id_fornecedor` ASC),
  INDEX `fk_conta_pagar_categoria_conta1_idx` (`fk_categoria_conta` ASC),
  CONSTRAINT `fk_td_conta_pagar_fornecedor1`
    FOREIGN KEY (`fk_fornecedor_id_fornecedor`)
    REFERENCES `brcantina`.`fornecedor` (`id_fornecedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_conta_pagar_categoria_conta1`
    FOREIGN KEY (`fk_categoria_conta`)
    REFERENCES `brcantina`.`categoria_conta` (`id_tipo_conta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `brcantina`.`foma_pagamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `brcantina`.`foma_pagamento` (
  `id_foma_pagamento` INT NOT NULL,
  `descricao` VARCHAR(45) NULL,
  PRIMARY KEY (`id_foma_pagamento`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `brcantina`.`conta_receber`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `brcantina`.`conta_receber` (
  `id_conta_receber` INT NOT NULL,
  `tipo_conta` VARCHAR(45) NULL,
  `valor` DECIMAL NULL,
  `data_credito` DATE NULL,
  `observacao` VARCHAR(255) NULL,
  `fk_foma_pagamento` INT NOT NULL,
  PRIMARY KEY (`id_conta_receber`),
  INDEX `fk_td_conta_receber_td_foma_pagamento1_idx` (`fk_foma_pagamento` ASC),
  CONSTRAINT `fk_td_conta_receber_td_foma_pagamento1`
    FOREIGN KEY (`fk_foma_pagamento`)
    REFERENCES `brcantina`.`foma_pagamento` (`id_foma_pagamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `brcantina`.`pagamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `brcantina`.`pagamento` (
  `id_pagamento` INT NOT NULL,
  `descricao` VARCHAR(45) NULL,
  `data_pagamento` DATE NULL,
  `fk_foma_pagamento` INT NOT NULL,
  `fk_pedido` INT NOT NULL,
  PRIMARY KEY (`id_pagamento`, `fk_foma_pagamento`),
  INDEX `fk_pagamento_foma_pagamento1_idx` (`fk_foma_pagamento` ASC),
  INDEX `fk_pagamento_pedido1_idx` (`fk_pedido` ASC),
  CONSTRAINT `fk_pagamento_foma_pagamento1`
    FOREIGN KEY (`fk_foma_pagamento`)
    REFERENCES `brcantina`.`foma_pagamento` (`id_foma_pagamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pagamento_pedido1`
    FOREIGN KEY (`fk_pedido`)
    REFERENCES `brcantina`.`pedido` (`id_pedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
